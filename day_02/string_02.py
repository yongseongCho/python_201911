# -*- coding: utf-8 -*-

# 문자열 결합
# 파이썬에서는 문자열끼리의 결합 연산이 가능 
# - + 연산자를 사용
str1 = 'Hello '
str2 = "Python~!"

msg = str1 + str2
print('msg -> {}'.format(msg))

# 주의사항 
# 파이썬은 문자열 사이에서만 결합이 가능
# 다른 타입(정수, 실수, 진리형)은 결합이 안됨
str3 = "10 + 3 = "
num = 10 + 3
msg = str3 + num

# 문자열의 동적 생성
# 외부의 값을 활용하여 문자열 생성하는 방법 
# 문자열 내부에 서식문자를 지정하고, 
# 해당 서식문자에 알맞는 값을 삽입하는 방법
# %d(십진수), %f(실수), %c(문자), %s(문자열)
num = 13
# 아래의 %d 자리에는 num 변수의 값이 삽입
str3 = "10 + 3 = %d" % num
print(str3)

# 다수개의 서식 문자가 사용되는 경우
str3 = "%d + %d = %d" % (10, 3, num)
print(str3)

# % 로 시작하는 서식 문자가 포함되지 않은 
# 문자열에서는 % 는 문자로 인식
str3 = "11 % 3 = 2"
print(str3)

# %로 시작하는 서식 문자가 포함된 문자열에서는
# %를 단독으로 사용할 수 없음
str3 = "%d % %d = %d" % (11, 3, 11 % 3)
print(str3)

str3 = "%d %% %d = %d" % (11, 3, 11 % 3)
print(str3)

str3 = "%d + %d = %d" % (5, 3, 5 + 3)
str4 = "%d + %d = %d" % (105, 103, 105 + 103)
print(str3)
print(str4)

# 서식문자를 사용한 자리수 제어
# 아래의 str3의 각 %d는 5자리로 출력
# 오른쪽 정렬로 출력
str3 = "%5d + %5d = %-3d" % (5, 3, 5 + 3)
str4 = "%5d + %5d = %3d" % (105, 103, 105 + 103)
print(str3)
print(str4)

# 실수의 경우 소수점 이하의 자리수 제어 가능
str5 = "%f" % (10.13579)
print(str5)

str5 = "%.2f" % (10.13579)
print(str5)

# format 메소드를 활용한 문자열 생성
# 서식 문자를 사용하지 않고 생성할 수 있음
str6 = '{0} % {1} = {2}'.format(11, 3, 11 % 3)
print(str6)

# format 메소드를 활용한 자리수 지정
# 오른쪽 정렬 방식
str7 = '{0:>5} % {1:>5} = {2:>5}'.format(11, 3, 11 % 3)
print(str7)

# 왼쪽 정렬 방식
str7 = '{0:<5} % {1:<5} = {2:<5}'.format(11, 3, 11 % 3)
print(str7)

# 가운데 정렬 방식
str7 = '{0:^5} % {1:^5} = {2:^5}'.format(11, 3, 11 % 3)
print(str7)









