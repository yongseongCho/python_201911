# -*- coding: utf-8 -*-

class Student :
    # 학생 클래스의 멤버필드 선언
    # 이름 / 나이 정보를 저장하는 멤버필드
    # None : 값이 없음을 의미(null)
    name = None
    age = None
    
    # 클래스의 내부에는 함수를 정의할 수 있음
    # 클래스 내부에 정의된 함수를 
    # 메소드라고 호칭함

    # 클래스의 멤버 메소드 선언
    # 클래스의 멤버 메소드는 클래스의 
    # 멤버필드를 활용할 수 있는 함수입니다.
    
    # 클래스의 메소드 선언 시, 주의사항
    # 클래스의 메소드는 반드시 한개의 
    # 매개변수를 선언해야만 합니다.
    # 해당 매개변수의 이름은 일반적으로 
    # self 로 명명합니다.
    def showInfo(self) :
        # 클래스의 메소드 내부에서 멤버 필드에
        # 접근하는 경우 self.멤버필드명 으로
        # 사용합니다.
        
        # self 매개변수가 사용되는 이유
        # 클래스의 멤버 필드들은 각각의
        # 객체마다 생성되지만, 멤버 메소드는
        # 하나만 존재합니다.(모든 객체가 공유)
        # 이때 각 객체가 저장된 공간을 참조하기
        # 위해서 self 매개변수가 사용됨
        # self 매개변수에는 현재 메소드를 실행하고
        # 있는 객체의 참조값이 전달
        print(f'name -> {self.name}')
        print(f'age -> {self.age}')

s1 = Student()
# 클래스의 객체를 사용하여 멤버 메소드를 호출할 때
# 자동으로 해당 객체의 값이 전달됩니다.
# - self 매개변수는 생략할 수 있음
# 실제로 아래의 코드가 실행되는 방식은
# - Student.show_info(s1)
s1.showInfo()

s1.name = 'A'
s1.age = 11

s2 = Student()

s2.name = 'B'
s2.age = 22

s1.showInfo()
s2.showInfo()













